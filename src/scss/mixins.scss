// 单行(省略)...(盒子必须设置宽度)
@mixin ellipsis() {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}
//过渡
@mixin transition($class,$time) {
  -webkit-transition: $class $time;
  -moz-transition: $class $time;
  -ms-transition: $class $time;
  -o-transition: $class $time;
  transition: $class $time;
}
@mixin rotate($angle) {
  -webkit-transform: rotate($angle);
  -moz-transform: rotate($angle);
  -ms-transform: rotate($angle);
  -o-transform: rotate($angle);
  transform: rotate($angle);
}
@mixin radius($radius-top,$radius-right,$radius-bottom,$radius-left) {
  -webkit-border-radius: unit($radius-top, px) unit($radius-right, px)
    unit($radius-bottom, px) unit($radius-left, px);
  -moz-border-radius: unit($radius-top, px) unit($radius-right, px)
    unit($radius-bottom, px) unit($radius-left, px);
  -ms-border-radius: unit($radius-top, px) unit($radius-right, px)
    unit($radius-bottom, px) unit($radius-left, px);
  -o-border-radius: unit($radius-top, px) unit($radius-right, px)
    unit($radius-bottom, px) unit($radius-left, px);
  border-radius: unit($radius-top, px) unit($radius-right, px)
    unit($radius-bottom, px) unit($radius-left, px);
}
@mixin shadow($shadow-x,$shadow-y,$shadow-fuzzy,$shadow-color) {
  //投影方式 X轴偏移量 Y轴偏移量 阴影模糊半径 阴影颜色
  -webkit-box-shadow: unit($shadow-x, px) unit($shadow-y, px)
    unit($shadow-fuzzy, px) $shadow-color;
  -moz-box-shadow: unit($shadow-x, px) unit($shadow-y, px)
    unit($shadow-fuzzy, px) $shadow-color;
  -ms-box-shadow: unit($shadow-x, px) unit($shadow-y, px)
    unit($shadow-fuzzy, px) $shadow-color;
  -o-box-shadow: unit($shadow-x, px) unit($shadow-y, px) unit($shadow-fuzzy, px)
    $shadow-color;
  box-shadow: unit($shadow-x, px) unit($shadow-y, px) unit($shadow-fuzzy, px)
    $shadow-color;
}
@mixin opacity($num) {
  filter: alpha(opacity=$num); /* IE */
  -moz-opacity: $num/100; /* 老版Mozilla */
  -khtml-opacity: $num/100; /* 老版Safari */
  opacity: $num/100; /* 支持opacity的浏览器*/
}
//字体
@mixin font($size) {
  font-size: unit($size, px);
  // font-size: unit($size/10,rem);
}

// /*强制换行*/
// .break-word() {
//   word-wrap: break-word;
//   word-break: break-all;
// }
// /*禁止换行*/
// .keep-all() {
//   word-break: keep-all;
//   white-space: nowrap;
// }
